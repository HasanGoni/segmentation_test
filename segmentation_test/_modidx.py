# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/segmentation_test',
                'doc_host': 'https://HasanGoni.github.io',
                'git_url': 'https://github.com/HasanGoni/segmentation_test',
                'lib_path': 'segmentation_test'},
  'syms': { 'segmentation_test.config': {},
            'segmentation_test.convTranspose_replace': { 'segmentation_test.convTranspose_replace.ConvTrns': ( 'convtranspose.html#convtrns',
                                                                                                               'segmentation_test/convTranspose_replace.py'),
                                                         'segmentation_test.convTranspose_replace.ConvTrns.__init__': ( 'convtranspose.html#convtrns.__init__',
                                                                                                                        'segmentation_test/convTranspose_replace.py'),
                                                         'segmentation_test.convTranspose_replace.ConvTrns.forward': ( 'convtranspose.html#convtrns.forward',
                                                                                                                       'segmentation_test/convTranspose_replace.py'),
                                                         'segmentation_test.convTranspose_replace.CustomConvTranspose': ( 'convtranspose.html#customconvtranspose',
                                                                                                                          'segmentation_test/convTranspose_replace.py'),
                                                         'segmentation_test.convTranspose_replace.CustomConvTranspose.__init__': ( 'convtranspose.html#customconvtranspose.__init__',
                                                                                                                                   'segmentation_test/convTranspose_replace.py'),
                                                         'segmentation_test.convTranspose_replace.CustomConvTranspose.forward': ( 'convtranspose.html#customconvtranspose.forward',
                                                                                                                                  'segmentation_test/convTranspose_replace.py')},
            'segmentation_test.core': {'segmentation_test.core.foo': ('core.html#foo', 'segmentation_test/core.py')},
            'segmentation_test.dataloader_creation': { 'segmentation_test.dataloader_creation.InferenceDataset': ( 'dataset_creation.html#inferencedataset',
                                                                                                                   'segmentation_test/dataloader_creation.py'),
                                                       'segmentation_test.dataloader_creation.InferenceDataset.__getitem__': ( 'dataset_creation.html#inferencedataset.__getitem__',
                                                                                                                               'segmentation_test/dataloader_creation.py'),
                                                       'segmentation_test.dataloader_creation.InferenceDataset.__init__': ( 'dataset_creation.html#inferencedataset.__init__',
                                                                                                                            'segmentation_test/dataloader_creation.py'),
                                                       'segmentation_test.dataloader_creation.InferenceDataset.__len__': ( 'dataset_creation.html#inferencedataset.__len__',
                                                                                                                           'segmentation_test/dataloader_creation.py'),
                                                       'segmentation_test.dataloader_creation.SegmentationDataset': ( 'dataset_creation.html#segmentationdataset',
                                                                                                                      'segmentation_test/dataloader_creation.py'),
                                                       'segmentation_test.dataloader_creation.SegmentationDataset.__getitem__': ( 'dataset_creation.html#segmentationdataset.__getitem__',
                                                                                                                                  'segmentation_test/dataloader_creation.py'),
                                                       'segmentation_test.dataloader_creation.SegmentationDataset.__init__': ( 'dataset_creation.html#segmentationdataset.__init__',
                                                                                                                               'segmentation_test/dataloader_creation.py'),
                                                       'segmentation_test.dataloader_creation.SegmentationDataset.__len__': ( 'dataset_creation.html#segmentationdataset.__len__',
                                                                                                                              'segmentation_test/dataloader_creation.py'),
                                                       'segmentation_test.dataloader_creation.create_pytorch_dataloader': ( 'dataset_creation.html#create_pytorch_dataloader',
                                                                                                                            'segmentation_test/dataloader_creation.py'),
                                                       'segmentation_test.dataloader_creation.get_training_augmentation': ( 'dataset_creation.html#get_training_augmentation',
                                                                                                                            'segmentation_test/dataloader_creation.py'),
                                                       'segmentation_test.dataloader_creation.get_transforms': ( 'dataset_creation.html#get_transforms',
                                                                                                                 'segmentation_test/dataloader_creation.py'),
                                                       'segmentation_test.dataloader_creation.get_validation_augmentation': ( 'dataset_creation.html#get_validation_augmentation',
                                                                                                                              'segmentation_test/dataloader_creation.py'),
                                                       'segmentation_test.dataloader_creation.repeat_collate_fn': ( 'dataset_creation.html#repeat_collate_fn',
                                                                                                                    'segmentation_test/dataloader_creation.py'),
                                                       'segmentation_test.dataloader_creation.split_ds': ( 'dataset_creation.html#split_ds',
                                                                                                           'segmentation_test/dataloader_creation.py'),
                                                       'segmentation_test.dataloader_creation.visualize_batch': ( 'dataset_creation.html#visualize_batch',
                                                                                                                  'segmentation_test/dataloader_creation.py')},
            'segmentation_test.mae.misc': { 'segmentation_test.mae.misc.MetricLogger': ( 'mae.misc.html#metriclogger',
                                                                                         'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.MetricLogger.__getattr__': ( 'mae.misc.html#metriclogger.__getattr__',
                                                                                                     'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.MetricLogger.__init__': ( 'mae.misc.html#metriclogger.__init__',
                                                                                                  'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.MetricLogger.__str__': ( 'mae.misc.html#metriclogger.__str__',
                                                                                                 'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.MetricLogger.add_meter': ( 'mae.misc.html#metriclogger.add_meter',
                                                                                                   'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.MetricLogger.log_every': ( 'mae.misc.html#metriclogger.log_every',
                                                                                                   'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.MetricLogger.synchronize_between_processes': ( 'mae.misc.html#metriclogger.synchronize_between_processes',
                                                                                                                       'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.MetricLogger.update': ( 'mae.misc.html#metriclogger.update',
                                                                                                'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.SmoothedValue': ( 'mae.misc.html#smoothedvalue',
                                                                                          'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.SmoothedValue.__init__': ( 'mae.misc.html#smoothedvalue.__init__',
                                                                                                   'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.SmoothedValue.__str__': ( 'mae.misc.html#smoothedvalue.__str__',
                                                                                                  'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.SmoothedValue.avg': ( 'mae.misc.html#smoothedvalue.avg',
                                                                                              'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.SmoothedValue.global_avg': ( 'mae.misc.html#smoothedvalue.global_avg',
                                                                                                     'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.SmoothedValue.max': ( 'mae.misc.html#smoothedvalue.max',
                                                                                              'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.SmoothedValue.median': ( 'mae.misc.html#smoothedvalue.median',
                                                                                                 'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.SmoothedValue.synchronize_between_processes': ( 'mae.misc.html#smoothedvalue.synchronize_between_processes',
                                                                                                                        'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.SmoothedValue.update': ( 'mae.misc.html#smoothedvalue.update',
                                                                                                 'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.SmoothedValue.value': ( 'mae.misc.html#smoothedvalue.value',
                                                                                                'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.all_reduce_mean': ( 'mae.misc.html#all_reduce_mean',
                                                                                            'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.get_grad_norm_': ( 'mae.misc.html#get_grad_norm_',
                                                                                           'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.get_rank': ( 'mae.misc.html#get_rank',
                                                                                     'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.get_world_size': ( 'mae.misc.html#get_world_size',
                                                                                           'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.init_distributed_mode': ( 'mae.misc.html#init_distributed_mode',
                                                                                                  'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.is_dist_avail_and_initialized': ( 'mae.misc.html#is_dist_avail_and_initialized',
                                                                                                          'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.is_main_process': ( 'mae.misc.html#is_main_process',
                                                                                            'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.load_model': ( 'mae.misc.html#load_model',
                                                                                       'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.save_model': ( 'mae.misc.html#save_model',
                                                                                       'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.save_on_master': ( 'mae.misc.html#save_on_master',
                                                                                           'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.setup_for_distributed': ( 'mae.misc.html#setup_for_distributed',
                                                                                                  'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.test_add_meter': ( 'mae.misc.html#test_add_meter',
                                                                                           'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.test_get_grad_norm_': ( 'mae.misc.html#test_get_grad_norm_',
                                                                                                'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.test_get_rank_not_initialized': ( 'mae.misc.html#test_get_rank_not_initialized',
                                                                                                          'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.test_getattr': ( 'mae.misc.html#test_getattr',
                                                                                         'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.test_log_every': ( 'mae.misc.html#test_log_every',
                                                                                           'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.test_str': ( 'mae.misc.html#test_str',
                                                                                     'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.test_synchronize_between_processes': ( 'mae.misc.html#test_synchronize_between_processes',
                                                                                                               'segmentation_test/mae/misc.py'),
                                            'segmentation_test.mae.misc.test_update': ( 'mae.misc.html#test_update',
                                                                                        'segmentation_test/mae/misc.py')},
            'segmentation_test.mae.model_development': { 'segmentation_test.mae.model_development.MaskedAutoencoderViT': ( 'mae.model_development.html#maskedautoencodervit',
                                                                                                                           'segmentation_test/mae/model_development.py'),
                                                         'segmentation_test.mae.model_development.MaskedAutoencoderViT.__init__': ( 'mae.model_development.html#maskedautoencodervit.__init__',
                                                                                                                                    'segmentation_test/mae/model_development.py'),
                                                         'segmentation_test.mae.model_development.MaskedAutoencoderViT._init_weights': ( 'mae.model_development.html#maskedautoencodervit._init_weights',
                                                                                                                                         'segmentation_test/mae/model_development.py'),
                                                         'segmentation_test.mae.model_development.MaskedAutoencoderViT.forward': ( 'mae.model_development.html#maskedautoencodervit.forward',
                                                                                                                                   'segmentation_test/mae/model_development.py'),
                                                         'segmentation_test.mae.model_development.MaskedAutoencoderViT.forward_decoder': ( 'mae.model_development.html#maskedautoencodervit.forward_decoder',
                                                                                                                                           'segmentation_test/mae/model_development.py'),
                                                         'segmentation_test.mae.model_development.MaskedAutoencoderViT.forward_encoder': ( 'mae.model_development.html#maskedautoencodervit.forward_encoder',
                                                                                                                                           'segmentation_test/mae/model_development.py'),
                                                         'segmentation_test.mae.model_development.MaskedAutoencoderViT.forward_loss': ( 'mae.model_development.html#maskedautoencodervit.forward_loss',
                                                                                                                                        'segmentation_test/mae/model_development.py'),
                                                         'segmentation_test.mae.model_development.MaskedAutoencoderViT.initialize_weights': ( 'mae.model_development.html#maskedautoencodervit.initialize_weights',
                                                                                                                                              'segmentation_test/mae/model_development.py'),
                                                         'segmentation_test.mae.model_development.MaskedAutoencoderViT.patchify': ( 'mae.model_development.html#maskedautoencodervit.patchify',
                                                                                                                                    'segmentation_test/mae/model_development.py'),
                                                         'segmentation_test.mae.model_development.MaskedAutoencoderViT.random_masking': ( 'mae.model_development.html#maskedautoencodervit.random_masking',
                                                                                                                                          'segmentation_test/mae/model_development.py'),
                                                         'segmentation_test.mae.model_development.MaskedAutoencoderViT.unpatchify': ( 'mae.model_development.html#maskedautoencodervit.unpatchify',
                                                                                                                                      'segmentation_test/mae/model_development.py'),
                                                         'segmentation_test.mae.model_development.get_1d_sincos_pos_embed_from_grid': ( 'mae.model_development.html#get_1d_sincos_pos_embed_from_grid',
                                                                                                                                        'segmentation_test/mae/model_development.py'),
                                                         'segmentation_test.mae.model_development.get_2d_sincos_pos_embed': ( 'mae.model_development.html#get_2d_sincos_pos_embed',
                                                                                                                              'segmentation_test/mae/model_development.py'),
                                                         'segmentation_test.mae.model_development.get_2d_sincos_pos_embed_from_grid': ( 'mae.model_development.html#get_2d_sincos_pos_embed_from_grid',
                                                                                                                                        'segmentation_test/mae/model_development.py'),
                                                         'segmentation_test.mae.model_development.mae_vit_base_patch16_dec512d8b': ( 'mae.model_development.html#mae_vit_base_patch16_dec512d8b',
                                                                                                                                     'segmentation_test/mae/model_development.py'),
                                                         'segmentation_test.mae.model_development.mae_vit_huge_patch14_dec512d8b': ( 'mae.model_development.html#mae_vit_huge_patch14_dec512d8b',
                                                                                                                                     'segmentation_test/mae/model_development.py'),
                                                         'segmentation_test.mae.model_development.mae_vit_large_patch16_dec512d8b': ( 'mae.model_development.html#mae_vit_large_patch16_dec512d8b',
                                                                                                                                      'segmentation_test/mae/model_development.py')},
            'segmentation_test.mae.pretraining_training': { 'segmentation_test.mae.pretraining_training.NativeScalerWithGradNormCount': ( 'mae.pretraining_training.html#nativescalerwithgradnormcount',
                                                                                                                                          'segmentation_test/mae/pretraining_training.py'),
                                                            'segmentation_test.mae.pretraining_training.NativeScalerWithGradNormCount.__call__': ( 'mae.pretraining_training.html#nativescalerwithgradnormcount.__call__',
                                                                                                                                                   'segmentation_test/mae/pretraining_training.py'),
                                                            'segmentation_test.mae.pretraining_training.NativeScalerWithGradNormCount.__init__': ( 'mae.pretraining_training.html#nativescalerwithgradnormcount.__init__',
                                                                                                                                                   'segmentation_test/mae/pretraining_training.py'),
                                                            'segmentation_test.mae.pretraining_training.NativeScalerWithGradNormCount.load_state_dict': ( 'mae.pretraining_training.html#nativescalerwithgradnormcount.load_state_dict',
                                                                                                                                                          'segmentation_test/mae/pretraining_training.py'),
                                                            'segmentation_test.mae.pretraining_training.NativeScalerWithGradNormCount.state_dict': ( 'mae.pretraining_training.html#nativescalerwithgradnormcount.state_dict',
                                                                                                                                                     'segmentation_test/mae/pretraining_training.py'),
                                                            'segmentation_test.mae.pretraining_training.adjust_learning_rate': ( 'mae.pretraining_training.html#adjust_learning_rate',
                                                                                                                                 'segmentation_test/mae/pretraining_training.py'),
                                                            'segmentation_test.mae.pretraining_training.get_grad_norm_': ( 'mae.pretraining_training.html#get_grad_norm_',
                                                                                                                           'segmentation_test/mae/pretraining_training.py'),
                                                            'segmentation_test.mae.pretraining_training.main': ( 'mae.pretraining_training.html#main',
                                                                                                                 'segmentation_test/mae/pretraining_training.py'),
                                                            'segmentation_test.mae.pretraining_training.parse_args_': ( 'mae.pretraining_training.html#parse_args_',
                                                                                                                        'segmentation_test/mae/pretraining_training.py'),
                                                            'segmentation_test.mae.pretraining_training.test_adjust_learning_rate': ( 'mae.pretraining_training.html#test_adjust_learning_rate',
                                                                                                                                      'segmentation_test/mae/pretraining_training.py'),
                                                            'segmentation_test.mae.pretraining_training.train_one_epoch': ( 'mae.pretraining_training.html#train_one_epoch',
                                                                                                                            'segmentation_test/mae/pretraining_training.py')},
            'segmentation_test.mae.viz_mae': { 'segmentation_test.mae.viz_mae.prepare_model': ( 'mae.viz_mae.html#prepare_model',
                                                                                                'segmentation_test/mae/viz_mae.py'),
                                               'segmentation_test.mae.viz_mae.run_one_image': ( 'mae.viz_mae.html#run_one_image',
                                                                                                'segmentation_test/mae/viz_mae.py'),
                                               'segmentation_test.mae.viz_mae.show_image': ( 'mae.viz_mae.html#show_image',
                                                                                             'segmentation_test/mae/viz_mae.py')},
            'segmentation_test.metrics_and_loss': { 'segmentation_test.metrics_and_loss.FDR': ( 'metrics_and_loss.html#fdr',
                                                                                                'segmentation_test/metrics_and_loss.py'),
                                                    'segmentation_test.metrics_and_loss.FDR.__init__': ( 'metrics_and_loss.html#fdr.__init__',
                                                                                                         'segmentation_test/metrics_and_loss.py'),
                                                    'segmentation_test.metrics_and_loss.FDR.result': ( 'metrics_and_loss.html#fdr.result',
                                                                                                       'segmentation_test/metrics_and_loss.py'),
                                                    'segmentation_test.metrics_and_loss.FNR': ( 'metrics_and_loss.html#fnr',
                                                                                                'segmentation_test/metrics_and_loss.py'),
                                                    'segmentation_test.metrics_and_loss.FNR.__init__': ( 'metrics_and_loss.html#fnr.__init__',
                                                                                                         'segmentation_test/metrics_and_loss.py'),
                                                    'segmentation_test.metrics_and_loss.FNR.result': ( 'metrics_and_loss.html#fnr.result',
                                                                                                       'segmentation_test/metrics_and_loss.py'),
                                                    'segmentation_test.metrics_and_loss.dice_coef': ( 'metrics_and_loss.html#dice_coef',
                                                                                                      'segmentation_test/metrics_and_loss.py'),
                                                    'segmentation_test.metrics_and_loss.dice_coef_loss': ( 'metrics_and_loss.html#dice_coef_loss',
                                                                                                           'segmentation_test/metrics_and_loss.py'),
                                                    'segmentation_test.metrics_and_loss.dice_loss': ( 'metrics_and_loss.html#dice_loss',
                                                                                                      'segmentation_test/metrics_and_loss.py'),
                                                    'segmentation_test.metrics_and_loss.tversky_focal_loss': ( 'metrics_and_loss.html#tversky_focal_loss',
                                                                                                               'segmentation_test/metrics_and_loss.py'),
                                                    'segmentation_test.metrics_and_loss.tversky_index': ( 'metrics_and_loss.html#tversky_index',
                                                                                                          'segmentation_test/metrics_and_loss.py')},
            'segmentation_test.model_developement': { 'segmentation_test.model_developement.CosineDecay': ( 'model_developement.html#cosinedecay',
                                                                                                            'segmentation_test/model_developement.py'),
                                                      'segmentation_test.model_developement.CosineDecay.__call__': ( 'model_developement.html#cosinedecay.__call__',
                                                                                                                     'segmentation_test/model_developement.py'),
                                                      'segmentation_test.model_developement.CosineDecay.__init__': ( 'model_developement.html#cosinedecay.__init__',
                                                                                                                     'segmentation_test/model_developement.py'),
                                                      'segmentation_test.model_developement.CosineDecay.get_config': ( 'model_developement.html#cosinedecay.get_config',
                                                                                                                       'segmentation_test/model_developement.py'),
                                                      'segmentation_test.model_developement.VGG_16': ( 'model_developement.html#vgg_16',
                                                                                                       'segmentation_test/model_developement.py'),
                                                      'segmentation_test.model_developement.blocks': ( 'model_developement.html#blocks',
                                                                                                       'segmentation_test/model_developement.py'),
                                                      'segmentation_test.model_developement.fcn_8_decoder': ( 'model_developement.html#fcn_8_decoder',
                                                                                                              'segmentation_test/model_developement.py'),
                                                      'segmentation_test.model_developement.segmentation_model': ( 'model_developement.html#segmentation_model',
                                                                                                                   'segmentation_test/model_developement.py')},
            'segmentation_test.preprocessing': { 'segmentation_test.preprocessing.Preprocess': ( 'core.html#preprocess',
                                                                                                 'segmentation_test/preprocessing.py'),
                                                 'segmentation_test.preprocessing.Preprocess.__post_init__': ( 'core.html#preprocess.__post_init__',
                                                                                                               'segmentation_test/preprocessing.py'),
                                                 'segmentation_test.preprocessing.Preprocess.augmentation_': ( 'core.html#preprocess.augmentation_',
                                                                                                               'segmentation_test/preprocessing.py'),
                                                 'segmentation_test.preprocessing.Preprocess.create_color_mask': ( 'core.html#preprocess.create_color_mask',
                                                                                                                   'segmentation_test/preprocessing.py'),
                                                 'segmentation_test.preprocessing.Preprocess.create_dataset': ( 'core.html#preprocess.create_dataset',
                                                                                                                'segmentation_test/preprocessing.py'),
                                                 'segmentation_test.preprocessing.Preprocess.create_train_test_dataset': ( 'core.html#preprocess.create_train_test_dataset',
                                                                                                                           'segmentation_test/preprocessing.py'),
                                                 'segmentation_test.preprocessing.Preprocess.display_ds': ( 'core.html#preprocess.display_ds',
                                                                                                            'segmentation_test/preprocessing.py'),
                                                 'segmentation_test.preprocessing.Preprocess.display_np_batch': ( 'core.html#preprocess.display_np_batch',
                                                                                                                  'segmentation_test/preprocessing.py'),
                                                 'segmentation_test.preprocessing.Preprocess.normalize': ( 'core.html#preprocess.normalize',
                                                                                                           'segmentation_test/preprocessing.py'),
                                                 'segmentation_test.preprocessing.Preprocess.process_data': ( 'core.html#preprocess.process_data',
                                                                                                              'segmentation_test/preprocessing.py'),
                                                 'segmentation_test.preprocessing.Preprocess.process_image_and_mask': ( 'core.html#preprocess.process_image_and_mask',
                                                                                                                        'segmentation_test/preprocessing.py'),
                                                 'segmentation_test.preprocessing.Preprocess.read_aug': ( 'core.html#preprocess.read_aug',
                                                                                                          'segmentation_test/preprocessing.py'),
                                                 'segmentation_test.preprocessing.Preprocess.read_image': ( 'core.html#preprocess.read_image',
                                                                                                            'segmentation_test/preprocessing.py'),
                                                 'segmentation_test.preprocessing.Preprocess.set_shapes': ( 'core.html#preprocess.set_shapes',
                                                                                                            'segmentation_test/preprocessing.py'),
                                                 'segmentation_test.preprocessing.Preprocess.show_aug': ( 'core.html#preprocess.show_aug',
                                                                                                          'segmentation_test/preprocessing.py'),
                                                 'segmentation_test.preprocessing.Preprocess.show_image': ( 'core.html#preprocess.show_image',
                                                                                                            'segmentation_test/preprocessing.py'),
                                                 'segmentation_test.preprocessing.convert_np_and_uint8': ( 'core.html#convert_np_and_uint8',
                                                                                                           'segmentation_test/preprocessing.py'),
                                                 'segmentation_test.preprocessing.convert_one_channel': ( 'core.html#convert_one_channel',
                                                                                                          'segmentation_test/preprocessing.py'),
                                                 'segmentation_test.preprocessing.foo': ( 'core.html#foo',
                                                                                          'segmentation_test/preprocessing.py')},
            'segmentation_test.preprocessing.pt_patching': { 'segmentation_test.preprocessing.pt_patching.ExactSizePatchNetwork': ( 'preprocessing.pt_patching.html#exactsizepatchnetwork',
                                                                                                                                    'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.ExactSizePatchNetwork.__init__': ( 'preprocessing.pt_patching.html#exactsizepatchnetwork.__init__',
                                                                                                                                             'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.ExactSizePatchNetwork.forward': ( 'preprocessing.pt_patching.html#exactsizepatchnetwork.forward',
                                                                                                                                            'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.ExactSizePatchNetwork.visualize_patches': ( 'preprocessing.pt_patching.html#exactsizepatchnetwork.visualize_patches',
                                                                                                                                                      'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.ImageToPatchLayer': ( 'preprocessing.pt_patching.html#imagetopatchlayer',
                                                                                                                                'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.ImageToPatchLayer.__init__': ( 'preprocessing.pt_patching.html#imagetopatchlayer.__init__',
                                                                                                                                         'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.ImageToPatchLayer.forward': ( 'preprocessing.pt_patching.html#imagetopatchlayer.forward',
                                                                                                                                        'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.OptimizedImageToPatchLayer': ( 'preprocessing.pt_patching.html#optimizedimagetopatchlayer',
                                                                                                                                         'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.OptimizedImageToPatchLayer.__init__': ( 'preprocessing.pt_patching.html#optimizedimagetopatchlayer.__init__',
                                                                                                                                                  'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.PatchToImageLayer': ( 'preprocessing.pt_patching.html#patchtoimagelayer',
                                                                                                                                'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.PatchToImageLayer.__init__': ( 'preprocessing.pt_patching.html#patchtoimagelayer.__init__',
                                                                                                                                         'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.PatchToImageLayer.forward': ( 'preprocessing.pt_patching.html#patchtoimagelayer.forward',
                                                                                                                                        'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.RobustPatchProcessingNetwork': ( 'preprocessing.pt_patching.html#robustpatchprocessingnetwork',
                                                                                                                                           'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.RobustPatchProcessingNetwork.__init__': ( 'preprocessing.pt_patching.html#robustpatchprocessingnetwork.__init__',
                                                                                                                                                    'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.RobustPatchProcessingNetwork.forward': ( 'preprocessing.pt_patching.html#robustpatchprocessingnetwork.forward',
                                                                                                                                                   'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.SizePreservingPatchLayer': ( 'preprocessing.pt_patching.html#sizepreservingpatchlayer',
                                                                                                                                       'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.SizePreservingPatchLayer.__init__': ( 'preprocessing.pt_patching.html#sizepreservingpatchlayer.__init__',
                                                                                                                                                'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.SizePreservingPatchLayer._calculate_grid': ( 'preprocessing.pt_patching.html#sizepreservingpatchlayer._calculate_grid',
                                                                                                                                                       'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.SizePreservingPatchLayer._create_weight_mask': ( 'preprocessing.pt_patching.html#sizepreservingpatchlayer._create_weight_mask',
                                                                                                                                                           'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.SizePreservingPatchLayer.forward': ( 'preprocessing.pt_patching.html#sizepreservingpatchlayer.forward',
                                                                                                                                               'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.SizePreservingPatchLayer.visualize_patch_grid': ( 'preprocessing.pt_patching.html#sizepreservingpatchlayer.visualize_patch_grid',
                                                                                                                                                            'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.SizePreservingPatchMerger': ( 'preprocessing.pt_patching.html#sizepreservingpatchmerger',
                                                                                                                                        'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.SizePreservingPatchMerger.__init__': ( 'preprocessing.pt_patching.html#sizepreservingpatchmerger.__init__',
                                                                                                                                                 'segmentation_test/preprocessing/pt_patching.py'),
                                                             'segmentation_test.preprocessing.pt_patching.SizePreservingPatchMerger.forward': ( 'preprocessing.pt_patching.html#sizepreservingpatchmerger.forward',
                                                                                                                                                'segmentation_test/preprocessing/pt_patching.py')},
            'segmentation_test.pretraining.mae_pretraining': { 'segmentation_test.pretraining.mae_pretraining.CustomTrainingArguments': ( 'mae_pretraining.html#customtrainingarguments',
                                                                                                                                          'segmentation_test/pretraining/mae_pretraining.py'),
                                                               'segmentation_test.pretraining.mae_pretraining.DataTrainingArguments': ( 'mae_pretraining.html#datatrainingarguments',
                                                                                                                                        'segmentation_test/pretraining/mae_pretraining.py'),
                                                               'segmentation_test.pretraining.mae_pretraining.DataTrainingArguments.__post_init__': ( 'mae_pretraining.html#datatrainingarguments.__post_init__',
                                                                                                                                                      'segmentation_test/pretraining/mae_pretraining.py'),
                                                               'segmentation_test.pretraining.mae_pretraining.ModelArguments': ( 'mae_pretraining.html#modelarguments',
                                                                                                                                 'segmentation_test/pretraining/mae_pretraining.py'),
                                                               'segmentation_test.pretraining.mae_pretraining.collate_fn': ( 'mae_pretraining.html#collate_fn',
                                                                                                                             'segmentation_test/pretraining/mae_pretraining.py'),
                                                               'segmentation_test.pretraining.mae_pretraining.main_': ( 'mae_pretraining.html#main_',
                                                                                                                        'segmentation_test/pretraining/mae_pretraining.py')},
            'segmentation_test.pytorch_ds_creation': { 'segmentation_test.pytorch_ds_creation.SegmentationDataset': ( 'pytorch_ds_creation.html#segmentationdataset',
                                                                                                                      'segmentation_test/pytorch_ds_creation.py'),
                                                       'segmentation_test.pytorch_ds_creation.SegmentationDataset.__getitem__': ( 'pytorch_ds_creation.html#segmentationdataset.__getitem__',
                                                                                                                                  'segmentation_test/pytorch_ds_creation.py'),
                                                       'segmentation_test.pytorch_ds_creation.SegmentationDataset.__init__': ( 'pytorch_ds_creation.html#segmentationdataset.__init__',
                                                                                                                               'segmentation_test/pytorch_ds_creation.py'),
                                                       'segmentation_test.pytorch_ds_creation.SegmentationDataset.__len__': ( 'pytorch_ds_creation.html#segmentationdataset.__len__',
                                                                                                                              'segmentation_test/pytorch_ds_creation.py'),
                                                       'segmentation_test.pytorch_ds_creation.TverskyFocalLoss': ( 'pytorch_ds_creation.html#tverskyfocalloss',
                                                                                                                   'segmentation_test/pytorch_ds_creation.py'),
                                                       'segmentation_test.pytorch_ds_creation.TverskyFocalLoss.__init__': ( 'pytorch_ds_creation.html#tverskyfocalloss.__init__',
                                                                                                                            'segmentation_test/pytorch_ds_creation.py'),
                                                       'segmentation_test.pytorch_ds_creation.TverskyFocalLoss.forward': ( 'pytorch_ds_creation.html#tverskyfocalloss.forward',
                                                                                                                           'segmentation_test/pytorch_ds_creation.py'),
                                                       'segmentation_test.pytorch_ds_creation.UNetSmall': ( 'pytorch_ds_creation.html#unetsmall',
                                                                                                            'segmentation_test/pytorch_ds_creation.py'),
                                                       'segmentation_test.pytorch_ds_creation.UNetSmall.__init__': ( 'pytorch_ds_creation.html#unetsmall.__init__',
                                                                                                                     'segmentation_test/pytorch_ds_creation.py'),
                                                       'segmentation_test.pytorch_ds_creation.UNetSmall.forward': ( 'pytorch_ds_creation.html#unetsmall.forward',
                                                                                                                    'segmentation_test/pytorch_ds_creation.py'),
                                                       'segmentation_test.pytorch_ds_creation.show_hf_dataset': ( 'pytorch_ds_creation.html#show_hf_dataset',
                                                                                                                  'segmentation_test/pytorch_ds_creation.py'),
                                                       'segmentation_test.pytorch_ds_creation.train': ( 'pytorch_ds_creation.html#train',
                                                                                                        'segmentation_test/pytorch_ds_creation.py')},
            'segmentation_test.pytorch_model_development': { 'segmentation_test.pytorch_model_development.AdaptiveAvgPool2d': ( 'pytorch_model_development.html#adaptiveavgpool2d',
                                                                                                                                'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.AdaptiveAvgPool2d.__init__': ( 'pytorch_model_development.html#adaptiveavgpool2d.__init__',
                                                                                                                                         'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.AdaptiveAvgPool2d.forward': ( 'pytorch_model_development.html#adaptiveavgpool2d.forward',
                                                                                                                                        'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.AdaptiveConcatPool2d': ( 'pytorch_model_development.html#adaptiveconcatpool2d',
                                                                                                                                   'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.AdaptiveConcatPool2d.__init__': ( 'pytorch_model_development.html#adaptiveconcatpool2d.__init__',
                                                                                                                                            'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.AdaptiveConcatPool2d.forward': ( 'pytorch_model_development.html#adaptiveconcatpool2d.forward',
                                                                                                                                           'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.AdaptiveMaxPool2d': ( 'pytorch_model_development.html#adaptivemaxpool2d',
                                                                                                                                'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.AdaptiveMaxPool2d.__init__': ( 'pytorch_model_development.html#adaptivemaxpool2d.__init__',
                                                                                                                                         'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.AdaptiveMaxPool2d.forward': ( 'pytorch_model_development.html#adaptivemaxpool2d.forward',
                                                                                                                                        'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.AttentionBlock': ( 'pytorch_model_development.html#attentionblock',
                                                                                                                             'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.AttentionBlock.__init__': ( 'pytorch_model_development.html#attentionblock.__init__',
                                                                                                                                      'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.AttentionBlock.forward': ( 'pytorch_model_development.html#attentionblock.forward',
                                                                                                                                     'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.DoubleConv': ( 'pytorch_model_development.html#doubleconv',
                                                                                                                         'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.DoubleConv.__init__': ( 'pytorch_model_development.html#doubleconv.__init__',
                                                                                                                                  'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.DoubleConv.forward': ( 'pytorch_model_development.html#doubleconv.forward',
                                                                                                                                 'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.MaxAvgPool2d': ( 'pytorch_model_development.html#maxavgpool2d',
                                                                                                                           'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.MaxAvgPool2d.__init__': ( 'pytorch_model_development.html#maxavgpool2d.__init__',
                                                                                                                                    'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.MaxAvgPool2d.forward': ( 'pytorch_model_development.html#maxavgpool2d.forward',
                                                                                                                                   'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.Pooling': ( 'pytorch_model_development.html#pooling',
                                                                                                                      'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.Pooling.__init__': ( 'pytorch_model_development.html#pooling.__init__',
                                                                                                                               'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.Pooling.forward': ( 'pytorch_model_development.html#pooling.forward',
                                                                                                                              'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.UNet': ( 'pytorch_model_development.html#unet',
                                                                                                                   'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.UNet.__init__': ( 'pytorch_model_development.html#unet.__init__',
                                                                                                                            'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.UNet.forward': ( 'pytorch_model_development.html#unet.forward',
                                                                                                                           'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.UNet.pad_image': ( 'pytorch_model_development.html#unet.pad_image',
                                                                                                                             'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.UpConv': ( 'pytorch_model_development.html#upconv',
                                                                                                                     'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.UpConv.__init__': ( 'pytorch_model_development.html#upconv.__init__',
                                                                                                                              'segmentation_test/pytorch_model_development.py'),
                                                             'segmentation_test.pytorch_model_development.UpConv.forward': ( 'pytorch_model_development.html#upconv.forward',
                                                                                                                             'segmentation_test/pytorch_model_development.py')},
            'segmentation_test.pytorch_training_and_loss': { 'segmentation_test.pytorch_training_and_loss.FocalLoss': ( 'training_pytorch.html#focalloss',
                                                                                                                        'segmentation_test/pytorch_training_and_loss.py'),
                                                             'segmentation_test.pytorch_training_and_loss.FocalLoss.__init__': ( 'training_pytorch.html#focalloss.__init__',
                                                                                                                                 'segmentation_test/pytorch_training_and_loss.py'),
                                                             'segmentation_test.pytorch_training_and_loss.FocalLoss.forward': ( 'training_pytorch.html#focalloss.forward',
                                                                                                                                'segmentation_test/pytorch_training_and_loss.py'),
                                                             'segmentation_test.pytorch_training_and_loss.false_positive_negative': ( 'training_pytorch.html#false_positive_negative',
                                                                                                                                      'segmentation_test/pytorch_training_and_loss.py'),
                                                             'segmentation_test.pytorch_training_and_loss.iou_metric': ( 'training_pytorch.html#iou_metric',
                                                                                                                         'segmentation_test/pytorch_training_and_loss.py'),
                                                             'segmentation_test.pytorch_training_and_loss.train_and_validate_front': ( 'training_pytorch.html#train_and_validate_front',
                                                                                                                                       'segmentation_test/pytorch_training_and_loss.py'),
                                                             'segmentation_test.pytorch_training_and_loss.train_segmentation_model': ( 'training_pytorch.html#train_segmentation_model',
                                                                                                                                       'segmentation_test/pytorch_training_and_loss.py'),
                                                             'segmentation_test.pytorch_training_and_loss.validate_front': ( 'training_pytorch.html#validate_front',
                                                                                                                             'segmentation_test/pytorch_training_and_loss.py')},
            'segmentation_test.tf_model_creation': { 'segmentation_test.tf_model_creation.attention_blocks': ( 'tf_model_creation.html#attention_blocks',
                                                                                                               'segmentation_test/tf_model_creation.py'),
                                                     'segmentation_test.tf_model_creation.conv_block': ( 'tf_model_creation.html#conv_block',
                                                                                                         'segmentation_test/tf_model_creation.py'),
                                                     'segmentation_test.tf_model_creation.crop_and_concat': ( 'tf_model_creation.html#crop_and_concat',
                                                                                                              'segmentation_test/tf_model_creation.py'),
                                                     'segmentation_test.tf_model_creation.decoder_block': ( 'tf_model_creation.html#decoder_block',
                                                                                                            'segmentation_test/tf_model_creation.py'),
                                                     'segmentation_test.tf_model_creation.decoder_block_attention_gates': ( 'tf_model_creation.html#decoder_block_attention_gates',
                                                                                                                            'segmentation_test/tf_model_creation.py'),
                                                     'segmentation_test.tf_model_creation.double_conv': ( 'tf_model_creation.html#double_conv',
                                                                                                          'segmentation_test/tf_model_creation.py'),
                                                     'segmentation_test.tf_model_creation.encoder_block': ( 'tf_model_creation.html#encoder_block',
                                                                                                            'segmentation_test/tf_model_creation.py'),
                                                     'segmentation_test.tf_model_creation.expend_as': ( 'tf_model_creation.html#expend_as',
                                                                                                        'segmentation_test/tf_model_creation.py'),
                                                     'segmentation_test.tf_model_creation.pooling': ( 'tf_model_creation.html#pooling',
                                                                                                      'segmentation_test/tf_model_creation.py'),
                                                     'segmentation_test.tf_model_creation.res_double_conv': ( 'tf_model_creation.html#res_double_conv',
                                                                                                              'segmentation_test/tf_model_creation.py'),
                                                     'segmentation_test.tf_model_creation.residual_attn_unet': ( 'tf_model_creation.html#residual_attn_unet',
                                                                                                                 'segmentation_test/tf_model_creation.py'),
                                                     'segmentation_test.tf_model_creation.residual_decoder_block': ( 'tf_model_creation.html#residual_decoder_block',
                                                                                                                     'segmentation_test/tf_model_creation.py'),
                                                     'segmentation_test.tf_model_creation.residual_encoder_block': ( 'tf_model_creation.html#residual_encoder_block',
                                                                                                                     'segmentation_test/tf_model_creation.py'),
                                                     'segmentation_test.tf_model_creation.unet_gating_signal': ( 'tf_model_creation.html#unet_gating_signal',
                                                                                                                 'segmentation_test/tf_model_creation.py'),
                                                     'segmentation_test.tf_model_creation.unet_model': ( 'tf_model_creation.html#unet_model',
                                                                                                         'segmentation_test/tf_model_creation.py'),
                                                     'segmentation_test.tf_model_creation.unet_model_attention_gates': ( 'tf_model_creation.html#unet_model_attention_gates',
                                                                                                                         'segmentation_test/tf_model_creation.py')},
            'segmentation_test.training_and_loss': { 'segmentation_test.training_and_loss.SSIMLoss': ( 'training.html#ssimloss',
                                                                                                       'segmentation_test/training_and_loss.py'),
                                                     'segmentation_test.training_and_loss.SSIMLoss.__init__': ( 'training.html#ssimloss.__init__',
                                                                                                                'segmentation_test/training_and_loss.py'),
                                                     'segmentation_test.training_and_loss.SSIMLoss.forward': ( 'training.html#ssimloss.forward',
                                                                                                               'segmentation_test/training_and_loss.py')},
            'segmentation_test.training_model': {},
            'segmentation_test.unet_training_script': {},
            'segmentation_test.viz_utils': { 'segmentation_test.viz_utils.show_model': ( 'viz_utils.html#show_model',
                                                                                         'segmentation_test/viz_utils.py')},
            'segmentation_test.xception_segmentation': { 'segmentation_test.xception_segmentation.XceptionBinarySegmentation': ( 'xception_segmentation.html#xceptionbinarysegmentation',
                                                                                                                                 'segmentation_test/xception_segmentation.py'),
                                                         'segmentation_test.xception_segmentation.XceptionBinarySegmentation.__init__': ( 'xception_segmentation.html#xceptionbinarysegmentation.__init__',
                                                                                                                                          'segmentation_test/xception_segmentation.py'),
                                                         'segmentation_test.xception_segmentation.XceptionBinarySegmentation.forward': ( 'xception_segmentation.html#xceptionbinarysegmentation.forward',
                                                                                                                                         'segmentation_test/xception_segmentation.py')}}}
