# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/11_convTranspose.ipynb.

# %% auto 0
__all__ = ['ConvTrns', 'CustomConvTranspose']

# %% ../nbs/11_convTranspose.ipynb 1
from .pytorch_model_development import *

# %% ../nbs/11_convTranspose.ipynb 2
import torch 
import torch.nn as nn
from fastcore.test import *

# %% ../nbs/11_convTranspose.ipynb 5
class ConvTrns(nn.Module):
    def __init__(self, in_channels, out_channels):
        super(ConvTrns, self).__init__()
        self.up = nn.ConvTranspose2d(in_channels, out_channels, kernel_size=2, stride=2)

    def forward(self, x):
        return self.up(x)

# %% ../nbs/11_convTranspose.ipynb 7
class CustomConvTranspose(nn.Module):
    ' Custom conv transpose, need in_channels and out_channels'

    def __init__(self, in_channels, out_channels):
        super(CustomConvTranspose, self).__init__()
        self.up = nn.Sequential(
            nn.Upsample(scale_factor=2, mode='nearest'),  # Resize layer
            nn.Conv2d(in_channels, out_channels, kernel_size=3, padding=1)  # Conv layer
        )

    def forward(self, x):
        x = self.up(x)
        return x

